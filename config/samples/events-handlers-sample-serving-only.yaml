apiVersion: core.openfunction.io/v1beta1
kind: Function
metadata:
  name: bindings
spec:
  version: "v1.0.0"
  image: openfunctiondev/v1beta1-bindings:latest
  #  imageCredentials:
  #    name: push-secret
  #  build:
  #    builder: openfunction/builder-go:latest
  #    env:
  #      FUNC_NAME: "HandleCronInput"
  #      FUNC_CLEAR_SOURCE: "true"
  #    srcRepo:
  #      url: "https://github.com/OpenFunction/samples.git"
  #      sourceSubPath: "functions/async/bindings/cron-input-kafka-output"
  serving:
    template:
      containers:
        - name: function
          imagePullPolicy: Always
    runtime: "async"
    inputs:
      - name: cron
        component: cron
    outputs:
      - name: sample
        component: kafka-server
        operation: "create"
    bindings:
      cron:
        type: bindings.cron
        version: v1
        metadata:
          - name: schedule
            value: "@every 2s"
      kafka-server:
        type: bindings.kafka
        version: v1
        metadata:
          - name: brokers
            value: "kafka-server-kafka-brokers:9092"
          - name: topics
            value: "events-sample"
          - name: consumerGroup
            value: "bindings-with-output"
          - name: publishTopic
            value: "events-sample"
          - name: authRequired
            value: "false"
---
apiVersion: core.openfunction.io/v1beta1
kind: Function
metadata:
  name: sink-a
spec:
  version: "v1.0.0"
  image: "openfunction/sink-sample:latest"
  port: 8080
  serving:
    runtime: "knative"
    template:
      containers:
        - name: function
          imagePullPolicy: Always
---
apiVersion: core.openfunction.io/v1beta1
kind: Function
metadata:
  name: sink-b
spec:
  version: "v1.0.0"
  image: "openfunction/sink-sample:latest"
  port: 8080
  serving:
    runtime: "knative"
    template:
      containers:
        - name: function
          imagePullPolicy: Always
---
apiVersion: events.openfunction.io/v1alpha1
kind: EventBus
metadata:
  name: default
spec:
  natsStreaming:
    natsURL: "nats://nats.default:4222"
    natsStreamingClusterID: "stan"
    subscriptionType: "queue"
    durableSubscriptionName: "ImDurable"
---
apiVersion: events.openfunction.io/v1alpha1
kind: EventSource
metadata:
  name: my-eventsource
spec:
  logLevel: "2"
  eventBus: "default"
  kafka:
    sample-one:
      brokers: "kafka-server-kafka-brokers.default.svc.cluster.local:9092"
      topic: "events-sample"
      authRequired: false
  sink:
    uri: "http://sink-a.default.ofn.io/"
---
apiVersion: events.openfunction.io/v1alpha1
kind: Trigger
metadata:
  name: my-trigger
spec:
  logLevel: "2"
  eventBus: "default"
  inputs:
    inputDemo:
      eventSource: "my-eventsource"
      event: "sample-one"
  subscribers:
    - condition: inputDemo
      sink:
        uri: "http://sink-b.default.ofn.io/"
